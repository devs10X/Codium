// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id  String @id @default(uuid())
  name String
  email String @unique
  profileImage String?
  chats Chat[]
  createdAt DateTime @default(now())
}

model Chat{
  id String @id @default(uuid())
  userid String
  user User @relation(fields: [userid], references: [id], onDelete: Cascade)
  messages Message[]
  files Files[]
  createdAt DateTime @default(now())
}

model Message{
  id String @id @default(uuid())
  chatid String
  chat Chat @relation(fields: [chatid], references: [id], onDelete: Cascade)
  content String
  role  ROLE
  createdAt DateTime @default(now())
}

model Files{
  id String @id @default(uuid())
  chatid String
  chat Chat @relation(fields: [chatid], references: [id], onDelete: Cascade)
  content String
  updatedAt DateTime @default(now())
}

enum ROLE {
  USER
  ASSISTANT
}
  